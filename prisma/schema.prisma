// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  email      String   @unique
  name       String?
  password   String
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Token         Token[]
  Address       Address[]
  Cart          Cart[]
  ProductReview ProductReview[]
  Order         Order[]
}

model Token {
  id        String   @id @default(cuid())
  userId    String
  token     String
  type      String // Access or Refresh token
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Address {
  id        String   @id @default(cuid())
  userId    String
  address   String
  city      String
  state     String
  country   String
  zip       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Product {
  id          String     @id @default(cuid())
  name        String
  description String
  price       Float
  categories  Category[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  Cart        Cart[]

  ProductImage   ProductImage[]
  ProductReview  ProductReview[]
  ProductVariant ProductVariant[]
  Order          Order[]
}

model Category {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Products  Product[]
}

model ProductImage {
  id        String   @id @default(cuid())
  productId String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])

  @@index([productId])
}

model ProductReview {
  id        String   @id @default(cuid())
  productId String
  userId    String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@index([userId, productId])
}

model ProductVariant {
  id        String   @id @default(cuid())
  productId String
  name      String
  type      String // Size, Color, etc
  price     Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  product Product @relation(fields: [productId], references: [id])
  Order   Order[]

  @@index([productId])
}

model Cart {
  id         String    @id @default(cuid())
  userId     String
  productIds Product[]
  quantity   Int
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  productId String
  variantId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User           @relation(fields: [userId], references: [id])
  product Product        @relation(fields: [productId], references: [id])
  variant ProductVariant @relation(fields: [variantId], references: [id])

  @@index([userId])
  @@index([productId])
}

model Payment {
  id        String   @id @default(cuid())
  userId    String
  orderId   String
  amount    Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@index([orderId])
}
